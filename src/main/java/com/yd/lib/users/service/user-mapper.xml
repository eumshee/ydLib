<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yd.lib.users.serviceImpl.user-mapper">
	
	<select id="loginCheck" parameterType="com.yd.lib.users.vo.UsersVO" resultType="com.yd.lib.users.vo.UsersVO" >
		select * from users where user_id = #{user_Id} and user_pw = #{user_Pw} and not user_Gubun = '삭제 회원'
	</select>
	
	<insert id="userJoin" parameterType="hashmap" >
		insert into users values(#{user_Id},#{user_Name},#{user_Pw},'준회원',#{user_Gender},#{user_Birth},#{user_Phone},#{user_Addr},#{user_Email},null)
	</insert>
	
	
	<select id="emailCheck" parameterType="string" resultType="com.yd.lib.users.vo.UsersVO" >
		select * from users where user_email = #{p}
	</select>
	
	<select id="telCheck" parameterType="string" resultType="com.yd.lib.users.vo.UsersVO" >
		select * from users where user_phone = #{p}
	</select>
	
	<select id="idCheck" parameterType="string" resultType="com.yd.lib.users.vo.UsersVO" >
		select * from users where user_id = #{p}
	</select>


	<update id="userPwUpdate" parameterType="hashmap">
		update users set user_pw=#{user_Pw} where user_id=#{user_Id}
	</update>
	
	<update id="userEmailUpdate" parameterType="hashmap">
		update users set user_Email=#{user_Email} where user_Id=#{user_Id}
	</update>
	
	<update id="userPhoneUpdate" parameterType="hashmap">
		update users set user_Phone=#{user_Phone} where user_Id=#{user_Id}
	</update>
	
	<update id="userAddrUpdate" parameterType="hashmap">
		update users set user_Addr=#{user_Addr} where user_Id=#{user_Id}
	</update>
	
	
	
	
	<select id="userLoanList" parameterType="string" resultType="com.yd.lib.users.vo.UserLoanInfoVO">
		SELECT 	h.user_Id, u.user_Name, b.book_Isbn, 
				b.book_title, b.book_aut, b.book_location, b.book_Img,b.book_Pub, b.book_subject, 
				TO_CHAR(h.loan_date,'YYYY/MM/DD') loan_Date, 
        		TO_CHAR(h.return_duedate,'YYYY/MM/DD') return_Duedate, h.loan_Status 
				from users u join history h on (u.user_id = h.user_id)
				join book b on (b.book_num = h.book_num) 
				where u.user_id = #{user_Id}
				order by h.loan_date
	</select>
	
	<select id="userYeyakList" parameterType="string" resultType="com.yd.lib.users.vo.UserYeyakInfoVO">
		SELECT 	y.user_Id, u.user_Name, b.book_title, b.book_aut, b.book_location, b.book_Img,b.book_Pub, b.book_subject,
       			TO_CHAR(y.yeyak_submit,'YYYY/MM/DD') yeyak_Submit, 
       			TO_CHAR(y.yeyak_start,'YYYY/MM/DD') yeyak_Start, 
      			TO_CHAR(y.yeyak_end,'YYYY/MM/DD') yeyak_End, 
      			y.yeyak_Processing
        		FROM yeyak y JOIN book b
				ON (y.book_num = b.book_num)
				JOIN users u
				ON (y.user_id = u.user_id)
       			where y.user_id = #{user_Id}
				order by y.yeyak_submit
	</select>
	
	
</mapper>